BACKEND - Programming
These can be done in any language you're comfortable with

1. Give a regular expression that detects hexadecimal numbers in a text.
For example, ‘0x0f4’, ‘0acdadecf822eeff32aca5830e438cb54aa722e3’, ‘8BADF00D’ should be detected.

> /(0x)?[0-9aA-fF]+/

2.Here is the pseudo code of a function that is defined recursively:
-  f(0) = 1;
-  f(1) = 3;
-  f(n)= 3 * f(n-1) - f(n-2);
Provide an implementation for ‘f’. Bonus points for a non recursive implementation.

> def calcatute_f(n)
      a = 1
      b = 3
      tmp = a
      for i in (2..n) do
         a = tmp
         fn = 3 * b - a
         tmp = b
         b = fn
      end
      return b;
  end

BACKEND - MySQL

1. Write a CREATE TABLE query for a table storing information on users. It will store:
  - id,
  - firstname,
  - lastname,
  - gender,
  - email,
  - created_at

> CREATE TABLE user (id int NOT NULL AUTO_INCREMENT,
                        firstname varchar(255),
                        lastname varchar(255),
                        email varchar(255) NOT NULL,
                        gender varchar(255),
                        created_at TIMESTAMP default current_timestamp,
                        PRIMARY KEY (ID));

2. Write a query on the previous table that lists the 10 most recently added users.

> SELECT *
  FROM   user
  ORDER  BY created_at DESC
  LIMIT  10;

GENERAL - Creativity
Si vous êtes Français, vous pouvez répondre en Français.

1. Describe the color yellow to someone who is blind

> Did you already sit outside during a summer day? Yes! Do you remember the warm on your face with a little wind?!
You felt well, peaceful, it's how you can represent the yellow, the sun color.
This color brings joy, warmth, friendship.

3. Describe the data model you’d use for a Battleship game. What are the key objects? How will your code use them?

> They will have different key objects :
  - team has_many players
  - player has_one :category has_one :ship
  - category has_many :ships
  - ship has_one :capacity
  - capacity (attack, defense)


We will have two teams fighting. Each team will be composed with some players, a player contains a name, one category
and one ship. The category (defenser / attacker) and for each category different ships available. The user will have to
choose first the category he wants to play and then a ship who will be associate to the user.
The ship could be choose by his capacity in attack or defense.
